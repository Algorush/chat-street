Create 3D street (from JSON object in Streetmix format with street parameters) by its textual description. Or edit existing 3D street scene by user requests. That is you know about existing created streets.

This function is accepting a structured JSON representation that follows the Streetmix format. These JSON representations is getting from user textual description. 

Below are the details on how to generate this JSON representation.

A Streetmix scene is a cross-section perspective of a 3D street, consisting of multiple segments. Each segment has three attributes:

width: Measured in meters.

type: Describes the kind of segment. The possible values are sidewalk, streetcar, bus-lane, drive-lane, light-rail, turn-lane, divider, temporary, stencils, food-truck, flex-zone, sidewalk-wayfinding, sidewalk-bench, sidewalk-bike-rack, magic-carpet, outdoor-dining, parklet, bikeshare, utilities, sidewalk-tree, sidewalk-lamp, transit-shelter, and parking-lane.

variantString: Modifications to the segment type, separated by a pipe ("|"). For instance, a drive-lane type may have an "inbound" or "outbound" variantString.

elevation: elevation level for segment. If last word in variantString is sidewalk (for example "inbound|green|sidewalk") then Elevation level is 1, if last word is road (for example "inbound|green|road") then Elevation level is 0.

For "divider" segments, there's no inbound or outbound orientation. Instead, variants include bollard, flowers, planting-strip, planter-box, palm-tree, big-tree, bush, and dome. For "temporary" segments, variants include barricade, traffic-cone, jersey-barrier-concrete, and jersey-barrier-plastic.

The order of the segments in the JSON description corresponds to the order of the segments on the street. From left to right.

If the request does not correspond to the given variants and segment types, then returning the one that is closest in meaning. If there is no such variant for the segment type, then returning the first variant for the segment type. If there is no similar type of segment found, then returning the grass segment.

If the order of the segments is not described in the request, then using the order that is usually used on the streets. That is, for example, first there are sidewalks, then bus stops, then bicycle paths, then roads for buses and taxis, then roads for cars, and so on.

For variantString of segments, use only variantString values that are supported by the segment type.

IMPORTANT: return only the JSON representation of the street. Do not return any additional text, such as 'json' or 'JSON' or '''.

For example, a user request like "show me a street with trains, sidewalks, trees, and lanes for motor vehicles. With wide building from the right and grass from the left side" could generate the JSON shown below:

{
"name": "default street",
"data": {
  "rightBuildingVariant": "wide",
  "leftBuildingVariant": "grass",
  "street": {
    "segments": [
      {
        "width": 12,
        "variantString": "sparse",
        "type": "sidewalk",
        "elevation": "1"
      },
      {
        "width": 3,
        "variantString": "big",
        "type": "sidewalk-tree",
        "elevation": "1"
      },
      {
        "width": 3,
        "variantString": "right|traditional",
        "type": "sidewalk-lamp",
        "elevation": "1"
      },
      {
        "width": 9,
        "variantString": "inbound|green|sidewalk",
        "type": "bike-lane",
        "elevation": "1"
      },
      {
      "width": 9,
      "variantString": "inbound|sharrow",
      "type": "drive-lane",
      "elevation": "0"
      },
      {
        "width": 11,
        "variantString": "inbound",
        "type": "light-rail",
        "elevation": "0"
      },
      {
        "width": 11,
        "variantString": "inbound|shared",
        "type": "turn-lane",
        "elevation": "0"
      },
      {
        "width": 2,
        "variantString": "bollard",
        "type": "divider",
        "elevation": "0"
      },
      {
        "width": 11,
        "variantString": "outbound|colored",
        "type": "streetcar",
        "elevation": "0"
      },
      {
        "width": 11,
        "variantString": "outbound|colored",
        "type": "bus-lane",
        "elevation": "0"
      },
      {
        "width": 11,
        "variantString": "right|light-rail",
        "type": "transit-shelter",
        "elevation": "0"
      },
      {
        "width": 9,
        "variantString": "outbound|sharrow",
        "type": "drive-lane",
        "elevation": "0"
      },
      {
        "width": 9,
        "variantString": "outbound|right",
        "type": "turn-lane",
        "elevation": "0"
      },
      {
        "width": 3,
        "variantString": "big",
        "type": "sidewalk-tree",
        "elevation": "1"
      },
      {
        "width": 3,
        "variantString": "both|pride",
        "type": "sidewalk-lamp",
        "elevation": "1"
      },
      {
        "width": 4,
        "variantString": "right",
        "type": "sidewalk-bench",
        "elevation": "1"
      },
      {
        "width": 12,
        "variantString": "sparse",
        "type": "sidewalk",
        "elevation": "1"
      }
    ]
  }
  }
}
end of example. This is just an example, the number of segments can be more than 12 if necessary

Here is all the supported segment types and their possible variants in array format. For variantString of segments, used STRICTLY only variantString values that are listed in the appropriate segment type.
{
  /* sidewalk segments */
  sidewalk: ['empty', 'sparse', 'normal', 'dense'],
  'sidewalk-wayfinding': ['large'],
  'sidewalk-bench': ['left', 'right', 'center'],
  'sidewalk-bike-rack': [
    'left|sidewalk-parallel',
    'right|sidewalk-parallel',
    'left|sidewalk',
    'right|sidewalk'
  ],
  'sidewalk-tree': ['big', 'palm-tree'],
  /* lights and utilities */
  utilities: ['left', 'right'],
  'sidewalk-lamp': [
    'right|modern',
    'both|modern',
    'left|modern',
    'right|traditional',
    'both|traditional',
    'left|traditional',
    'right|pride',
    'both|pride',
    'left|pride'
  ],
  // furniture segments
  parklet: ['left', 'right'],
  'outdoor-dining': ['empty|sidewalk', 'empty|road'],
  bikeshare: ['left|road', 'right|road', 'left|sidewalk', 'right|sidewalk'],
  // bike and scooter segments. 
  'bike-lane': [
    'inbound|green|sidewalk',
    'inbound|green|road',
    'outbound|green|sidewalk',
    'outbound|green|road',
    'inbound|regular|sidewalk',
    'inbound|regular|road',
    'outbound|regular|sidewalk',
    'outbound|regular|road',
    'inbound|red|sidewalk',
    'inbound|red|road',
    'outbound|red|sidewalk',
    'outbound|red|road'
  ],
  scooter: [
    'inbound|regular',
    'inbound|green',
    'inbound|red',
    'outbound|regular',
    'outbound|green',
    'outbound|red'
  ],
  // road segments
  'bus-lane': [
    'inbound|colored|typical',
    'outbound|colored|typical',
    'inbound|regular|typical',
    'outbound|regular|typical',
    'inbound|red|typical',
    'outbound|red|typical'
  ],
  'drive-lane': [
    'inbound|car',
    'outbound|car',
    'inbound|truck',
    'outbound|truck',
    'outbound|av',
    'inbound|av',
    'outbound|pedestrian',
    'inbound|pedestrian',
    'inbound|sharrow',
    'outbound|sharrow'
  ],
  'turn-lane': [
    'inbound|left',
    'inbound|right',
    'inbound|left-right-straight',
    'inbound|shared',
    'inbound|both',
    'inbound|left-straight',
    'inbound|right-straight',
    'inbound|straight',
    'outbound|left',
    'outbound|right',
    'outbound|left-right-straight',
    'outbound|shared',
    'outbound|both',
    'outbound|left-straight',
    'outbound|right-straight',
    'outbound|straight'
  ],
  'parking-lane': [
    'sideways|right',
    'sideways|left',
    'inbound|right',
    'inbound|left',
    'outbound|left',
    'outbound|right',
    'angled-front-left|left',
    'angled-front-right|left',
    'angled-rear-left|left',
    'angled-rear-right|left',
    'angled-front-left|right',
    'angled-front-right|right',
    'angled-rear-left|right',
    'angled-rear-right|right'
  ],
  'food-truck': ['left', 'right'],
  'flex-zone': [
    'taxi|inbound|right',
    'taxi|inbound|left',
    'taxi|outbound|right',
    'taxi|outbound|left',
    'rideshare|outbound|right',
    'rideshare|outbound|right',
    'rideshare|inbound|right',
    'rideshare|inbound|left'
  ],
  // rail vehicles
  streetcar: [
    'inbound|regular',
    'inbound|colored',
    'inbound|grass',
    'outbound|regular',
    'outbound|colored',
    'outbound|grass'
  ],
  'light-rail': [
    'inbound|regular',
    'inbound|colored',
    'inbound|grass',
    'outbound|regular',
    'outbound|colored',
    'outbound|grass'
  ],
  // stations
  'brt-station': ['center'],
  'transit-shelter': [
    'left|street-level',
    'right|street-level',
    'right|light-rail',
    'left|light-rail'
  ],
  // divider and temporary
  divider: [
    'buffer',
    'flowers',
    'planting-strip',
    'planter-box',
    'palm-tree',
    'big-tree',
    'bush',
    'dome',
    'bollard',
    'striped-buffer'
  ],
  temporary: [
    'barricade',
    'traffic-cone',
    'jersey-barrier-plastic',
    'jersey-barrier-concrete'
  ],
  // magic segment
  'magic-carpet': ['aladdin']
}
